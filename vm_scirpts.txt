
qemu create img
qemu-img create -f qcow2 ubuntu-server.qcow2 10G

auto install 

qemu-system-x86_64 \
  -m 4G -smp 4 \
  -drive file=ubuntu-server.qcow2,format=qcow2 \
  -cdrom ubuntu-24.04.3-live-server-amd64.iso \
  -boot d \
  #-nographic \
  -serial stdio

after install:
qemu-system-x86_64 \
  -enable-kvm \
  -m 4G -smp 4 \
  -drive file=ubuntu-server.qcow2,format=qcow2 \
  -serial stdio

sudo apt-get install build-essential kmod
sudo apt-get install linux-headers-`uname -r`




sharing a dir with the host

install pakeges

runner 
copy to vm or sharing a dir with the host


(docker for all of it)



didnt work uses kernel from host:

take prebulit ubuntu server img from here: https://cloud-images.ubuntu.com/
(wget https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img
)
set up password for the img: 
virt-customize -a noble-server-cloudimg-amd64.img --root-password password:<my_pass>
(need :
sudo dnf install libguestfs-tools-c
)

to run with sharing folders:
qemu-system-x86_64 \
  -m 2G \
  -smp 2 \
  -drive file=noble-server-cloudimg-amd64.img,format=qcow2 \
  -virtfs local,path="$(pwd)",security_model=mapped-xattr,mount_tag=shared \
  -nographic \
  -serial mon:stdio \
  -append "console=ttyS0" \
  --enable-kvm

qemu-system-x86_64 \
  -m 2G  #2G RAM
  -smp 2 \ #2 CPU cores
  -drive file=noble-server-cloudimg-amd64.img,format=qcow2 \ # Attaches a virtual disk using the QCOW2 format
  -virtfs local,path="$(pwd)" # the directory on the host to share
  ,security_model=mapped-xattr #
  ,mount_tag=shared \# label the guest uses to mount this share. Inside the VM, you'd run mount -t virtiofs shared /mnt/shared.
  -nographic \
  -serial mon:stdio \
  -append "console=ttyS0" \
  --enable-kvm

Inside the VM (once booted), you can mount it as follows:

sudo mkdir -p /mnt/shared
sudo mount -t virtiofs shared /mnt/shared




